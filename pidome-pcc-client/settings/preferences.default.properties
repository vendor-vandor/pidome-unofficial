################
#
# Default preferences, when you have none, or preferences.properties does not exist.
#
# It is not adviced to change stuff here. The best way is to shutdown the client
# and copy (if not already present) the configuration options from here to
# preferences.properties and change it over there.

# DO NOT EVER REMOVE THIS FILE! Put your settings in preferences.properties.

# touch stuff
org.pidome.touchdevice=
org.pidome.touchdevice.maxX=
org.pidome.touchdevice.maxY=

####### READ THIS CAREFULLY!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

## Set minimum and maximum brightness levels 0-100 in percentages.
# Minimum display brightness amount.
org.pidome.client.fixed.settings.backlight.min=20
# maximum display brightness amount.
org.pidome.client.fixed.settings.backlight.max=100

# If you want to turn off the backlight after a certain amount of 
# time set this to true. This option uses the brightness settings
# below. An option for real power off will be a future preference.
org.pidome.client.fixed.settings.backlight.emulatepower=false
# Set the threshold time in seconds to turn off the display
org.pidome.client.fixed.settings.backlight.emulatepower.off.timeout=30

## Other types then GPIO are currently not supported.
org.pidome.client.fixed.settings.backlight.out.type=gpio
## The mthod is a special one. If pi4j fails, try to set it to "BCM" (Capital letters and without the " characters) which
## will use the command line /usr/bin/gpio executable  (so make sure it exists ;) ).
## When you use the "BCM" setting make sure you use the orginal Broadcom pin number! 
org.pidome.client.fixed.settings.backlight.gpio.out.method=pi4j
## GPIO number according pi4j/wiringpi OR official Broadcom pi pin when using "BCM". 
## Look at this schematic about the nummering: http://pi.gadgetoid.com/pinout/wiringpi Select the appropiate pin output to see the mappings.
## The below pin will provide a PWM signal so you know what it does :).
org.pidome.client.fixed.settings.backlight.gpio.out.pin=

# Analog read in, used to map to out. Only fill this in when you have hardware
# based brightness control like an LDR.
# This is based on the pi4j pin numbering (http://pi.gadgetoid.com/pinout/wiringpi)
# This method heavily depends on how busy the client is. These min and max values represent how long it takes
# to find out how light or dark it is. The client waits for the amount of time the pin reaches a high state after
# it has been taken low. The more resistance from the LDR the longer it takes the pin goes high. The darker it is.
# these values are in miliseconds.

# time between updates
org.pidome.client.fixed.settings.backlight.in.interval=60
## Other types then GPIO are currently not supported.
org.pidome.client.fixed.settings.backlight.in.type=gpio
# Pin number, see above description.
org.pidome.client.fixed.settings.backlight.gpio.in=
# time in miliseconds light is detected, see above description
org.pidome.client.fixed.settings.backlight.gpio.in.min=20
# Time in miliseconds darkness is detected, see above description.
org.pidome.client.fixed.settings.backlight.gpio.in.max=200